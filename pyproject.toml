[tool.poetry]
name = "wagtail-link-block"
version = "1.1.7"
description = "A Block for wagtail that lets users choose a Page/Document/URL/email/etc. as a link"
authors = ["The Developer Society <studio@dev.ngo>"]
readme = "README.md"
packages = [{include = "wagtail_link_block"}]
classifiers = [
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.5",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Framework :: Django",
    "Framework :: Django :: 1.11",
    "Framework :: Django :: 2.2",
    "Framework :: Django :: 3.2",
]
license = "BSD"

[tool.poetry.dependencies]
python = ">=3.8.1"
Django = ">=1.11"
wagtail = ">=2.7"

[tool.poetry.group.lint.dependencies]
black = "^23.1"
isort = "^5.12"
flake8 = "^6.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 99
target-version = 'py38'

[tool.ruff.lint]
select = [
    'F',   # pyflakes
    'E',   # pycodestyle
    'W',   # pycodestyle
    'I',   # isort
    'N',   # pep8-naming
    'UP',  # pyupgrade
    'S',   # flake8-bandit
    'BLE', # flake8-blind-except
    'C4',  # flake8-comprehensions
    'EM',  # flake8-errmsg
    'T20', # flake8-print
    'RET', # flake8-return
    'RUF', # ruff
]
ignore = [
    'EM101', # flake8-errmsg: raw-string-in-exception
]

[tool.ruff.lint.isort]
combine-as-imports = true
